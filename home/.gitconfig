[user]
	name = Ariel Flesler
	email = aflesler@gmail.com
	signingkey = B56BB2FD099B63A7
[github]
  user = flesler
[credential]
  # Remember credentials when cloning over HTTPS
  # helper = wincred
[alias]
	s = status -s
	d = diff
	dw = diff --word-diff
	a = add -A
	cm = commit -m
	cma = commit -am
	ame = commit --amend --allow-empty
	amne = commit --amend --no-edit --allow-empty
	co = checkout
	com = checkout master
	# rev = checkout --
	rsh = reset --soft HEAD^
	# rh- = reset --hard HEAD^
	rhh = reset --hard HEAD
	p = push
	pf = push --force-with-lease
	pr = pull --rebase
	pop = stash pop
	br = branch
	rb = rebase
	rbc = rebase --continue
	rba = rebase --abort
	rbi = rebase --interactive
	rbm = rebase master
	head = log -n1
	lg = log --graph --pretty=format:'%Cred%h%Creset %C(yellow)%G?%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	# recap = log --all --no-merges --author $(git config user.email) --graph --pretty=format:'%Cred%h%Creset %C(yellow)%G?%Creset %s %Cgreen(%cr)'
	recap = log --all --no-merges --author aflesler@gmail.com --graph --pretty=format:'%Cred%h%Creset %C(yellow)%G?%Creset %s %Cgreen(%cr)'
	# fixup = "!f() { TARGET=$(git rev-parse "$1"); git commit --fixup=$TARGET ${@:2} && EDITOR=true git rebase -i --autostash --autosquash $TARGET^; }; f"
	fixup = "!f() { TARGET=$(git rev-parse \"$1\"); git commit --fixup=$TARGET && GIT_EDITOR=true git rebase --interactive --autosquash $TARGET~; }; f"

[core]
	# Use custom `.gitignore`
	excludesfile = ~/.gitignore
	autocrlf = false
	quotepath = false
	ignorecase = false
[color]
	# Use colors in Git commands that are capable of colored output when
	ui = auto
[push]
	# Make `git push` push relevant annotated tags when pushing branches out.
	followTags = true
	default = current
[pull]
	rebase = true
	autoStash = true
[rerere]
	enabled = 1
[diff]
	# Detect copies as well as renames
	renames = copies
[help]
	# Automatically correct and execute mistyped commands
	autocorrect = 1
[stash]
	showPatch = true
[filter "lfs"]
	smudge = git-lfs smudge -- %f
	required = true
	clean = git-lfs clean -- %f
[commit]
	gpgsign = true
